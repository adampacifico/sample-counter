{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","count","App","useReducer","dispatch","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAKA,SAASA,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,YACH,MAAO,CAAEC,MAAOH,EAAMG,MAAQ,GAChC,IAAK,YACH,MAAO,CAAEA,MAAOH,EAAMG,MAAQ,GAChC,QACE,OAAOH,GA2BEI,MAxBf,WAAgB,IAAD,EAEaC,qBAAWN,EAAS,CAAEI,MAAO,IAF1C,mBAENH,EAFM,KAECM,EAFD,KAcb,OACE,sBAAKC,UAAU,MAAf,UACC,6BAAKP,EAAMG,QACV,uBACA,wBAAQI,UAAU,yBAAyBC,QAAS,WAbtDF,EAAS,CACPJ,KAAM,eAYN,iBACA,wBAAQK,UAAU,6BAA6BC,QAAS,WAT1DF,EAAS,CACPJ,KAAM,eAQN,qBCtBSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d9cda355.chunk.js","sourcesContent":["import './App.css';\nimport React, { useReducer } from 'react';\nimport { button } from 'reactstrap';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { count: state.count + 1 }\n    case \"decrement\":\n      return { count: state.count - 1 }\n    default:\n      return state;\n  }\n}\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, { count: 0 })\n\n  function increment() {\n    dispatch({\n      type: \"increment\"\n    })\n  }\n  function decrement() {\n    dispatch({\n      type: \"decrement\"\n    })\n  }\n  return (\n    <div className=\"App\">\n     <h1>{state.count}</h1> \n      <br></br>\n      <button className=\"btn btn-primary btn-lg\" onClick={() => increment()}> + </button>\n      <button className=\"btn btn-danger btn-lg ml-5\" onClick={() => decrement()}> - </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}